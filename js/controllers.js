 var customerAppControllers = angular.module('customerAppControllers',[]);
/*
* Populates the customer listing page with records and handles delete requests generated by clicking
* a records delete button
*/
customerAppControllers.controller('CustomerListController', ['$scope','Server', 
	function ($scope, Server) {
		//get all the customer jsons and bind them to customers to be displayed
		Server.getAllCustomers()
			.success(function(data){
				$scope.customers = data;
			})
			.error(function(status){
				console.log("Request returned error code: " + status);
			});
		$scope.deleteCustomer = function(email){
			//find the customer in the scope and delete it 
			for (var i = 0; i < $scope.customers.length; i++) {
				if ($scope.customers[i].email === email) {
					$scope.customers.splice(i,1);
				}
			}
			//fire the delete request and bind a message to the Action Log to alert the user
			Server.deleteCustomer(email)
				.success(function(data){
					$scope.message = "User with email " + email + " was deleted.";
				});
		};
		//By default, sort the customers by name
		$scope.sortBy = "name";
	}
]);
/*
* Modifies and creates customer records, uses the email of customer for the primary key
* if a customer is submitted with the same email the existing file is update with the new information
* otherwise a new file is created with the title 'customer.email.json'
*/
customerAppControllers.controller('CustomerModifyController', ['$scope','$routeParams','Server',
	function($scope,$routeParams,Server){
		//if the key is equal to addCustomer the user navigated to the page by clicking the Add New
		//button, so show the appropriate title, and do not populate the form. 
		if($routeParams.key === "addCustomer"){
			$scope.pageTitle = "Add Customer";
		}
		else{
			//otherwise the user clicked a modify button and the key is equal to the email of the user
			//to be modified 
			$scope.pageTitle = "Modify Customer";
			//populate the form with the customers information
			Server.getCustomer($routeParams.key)
				.success(function(data){
					$scope.customer = data[0];
				})
				.error(function(status){
					console.log("Request returned error code: " + status);
				});
		}
		//fires when the user clicks submit to enter the form
		//isSuccesful is used to determine if a success confirmation message should be shown.
		$scope.writeCustomer = function(){
			var name = $scope.customer.email;
			Server.writeCustomer($scope.customer)
				.success(function(status){
					$scope.nameWritten = name;
				});
		};	
	}
]);